# NOTE: This file is automatically generated by pywal. Do not edit it by hand.

[global]
    # The geometry of the window:
    # The geometry of the message window.
    # The height is measured in number of notifications everything else
    # in pixels.  If the width is omitted but the height is given
    # ("-geometry x2"), the message window expands over the whole screen
    # (dmenu-like).  If width is 0, the window expands to the longest
    # message displayed.  A positive x is measured from the left, a
    # negative from the right side of the screen.  Y is measured from
    # the top and down respectevly.
    # The width can be negative.  In this case the actual width is the
    # screen width minus the width defined in within the geometry option.
    geometry = "0x50-15+49"

    # The transparency of the window.  Range: [0; 100].
    # This option will only work if a compositing windowmanager is
    # present (e.g. xcompmgr, compiz, etc.).
    transparency = 10

    # Don't remove messages, if the user is idle (no mouse or keyboard input)
    # for longer than idle_threshold seconds.
    # Set to 0 to disable.
    idle_threshold = 0

    # Font and typography settings
    font = mononoki 13
    alignment = center
    word_wrap = yes

    # Show how many messages are currently hidden (because of geometry).
    indicate_hidden = yes

    # Format for how notifications will be displayed
    # Usage: `notify-send 'Title' 'Summary'`
    format = "<b>%s</b>\n%b"

    # Allow some HTML tags like <i> and <u> in notifications
    markup = full

    # Should a notification popped up from history be sticky or timeout
    # as if it would normally do.
    sticky_history = yes

    # Maximum amount of notifications kept in history
    history_length = 15

    # Display indicators for URLs (U) and actions (A).
    show_indicators = no

    # The height of a single line.  If the height is smaller than the
    # font height, it will get raised to the font height.
    # This adds empty space above and under the text.
    line_height = 3

    # Draw a line of "separatpr_height" pixel height between two
    # notifications.
    # Set to 0 to disable.
    separator_height = 2

    # Padding between text and separator.
    padding = 6

    # Horizontal padding.
    horizontal_padding = 6

    # Define a color for the separator.
    # possible values are:
    #  * auto: dunst tries to find a color fitting to the background;
    #  * foreground: use the same color as the foreground;
    #  * frame: use the same color as the frame;
    #  * anything else will be interpreted as a X color.
    separator_color = frame

    # Print a notification on startup.
    # This is mainly for error detection, since dbus (re-)starts dunst
    # automatically after a crash.
    startup_notification = false

    # dmenu path.
    dmenu = /usr/bin/rofi -dmenu

    # Align icons left/right/off
    icon_position = left
    max_icon_size = 256

    # Paths to default icons.
    icon_path = /usr/share/icons/Adwaita/96x96/devices/:/usr/share/icons/Adwaita/48x48/status/:/usr/share/icons/Adwaita/96x96/apps/

    frame_width = 3
    frame_color = "#83a598"

# These are the keybindings used to control dunst notifications
[shortcuts]
    close = ctrl+space
    close_all = ctrl+shift+space
    history = ctrl+grave

# Set the background and foreground (text) color for all notifications
[urgency_low]
    background = "#1d2021"
    foreground = "#d5c4a1"

[urgency_normal]
    background = "#1d2021"
    foreground = "#d5c4a1"

[urgency_critical]
    background = "#1d2021"
    foreground = "#d5c4a1"

# vim:ft=cfg
